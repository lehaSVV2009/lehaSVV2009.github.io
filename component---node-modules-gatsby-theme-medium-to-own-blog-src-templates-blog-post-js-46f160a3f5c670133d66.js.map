{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-theme-medium-to-own-blog/src/components/bio.js","webpack:///./node_modules/gatsby-theme-medium-to-own-blog/src/components/responses.js","webpack:///./node_modules/gatsby-theme-medium-to-own-blog/src/templates/blog-post.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby-theme-medium-to-own-blog/utils/default-options.js"],"names":["MDXRenderer","require","module","Wrapper","Styled","div","StyledImage","Image","Bio","site","avatar","siteMetadata","author","social","shortBio","fixed","childImageSharp","alt","imgStyle","borderRadius","style","margin","twitter","href","AvatarWrapper","AvatarImage","img","Time","time","theme","colors","grey","AuthorNameWrapper","p","AuthorName","a","text","Avatar","published","src","photo","name","target","rel","url","dateTime","formatPostDate","ShowReponses","button","primary","ul","shadows","box","separator","VideoContent","ResponseLink","Responses","responses","useState","showingResponses","setShowingResponses","length","map","response","wmReceived","content","video","v","controls","muted","autoPlay","loop","type","onClick","BackLink","Link","Header","header","Footer","footer","Separator","hr","Likes","PageTemplate","data","mdx","allWebMentionEntry","pageContext","previous","next","permalink","themeOptions","options","withDefaults","webmentions","nodes","likes","filter","x","wmProperty","title","frontmatter","description","excerpt","canonicalLink","canonical_link","keywords","categories","meta","timeToRead","centered","to","date","formatReadingTime","items","scope","Embed","body","githubUrl","contentPath","pathPrefix","fields","slug","replace","display","flexWrap","justifyContent","listStyle","padding","pageQuery","React","useMDXComponents","useMDXScope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","exports","imagesPath","config"],"mappings":"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","file":"component---node-modules-gatsby-theme-medium-to-own-blog-src-templates-blog-post-js-46f160a3f5c670133d66.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\nimport Styled from '@emotion/styled'\n\nconst Wrapper = Styled.div`\n  display: flex;\n  margin-bottom: 4.375rem;\n`\n\nconst StyledImage = Styled(Image)`\n  margin-right: 0.875rem;\n  margin-bottom: 0;\n  min-width: 50px;\n  border-radius: 100%;\n`\n\nfunction Bio() {\n  const { site, avatar } = useStaticQuery(\n    graphql`\n      query BioQuery {\n        avatar: file(absolutePath: { regex: \"/avatar.png/\" }) {\n          childImageSharp {\n            fixed(width: 50, height: 50, quality: 80) {\n              base64\n              width\n              height\n              src\n              srcSet\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            author\n            shortBio\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const { author, social, shortBio } = site.siteMetadata\n\n  return (\n    <Wrapper>\n      <StyledImage\n        fixed={avatar.childImageSharp.fixed}\n        alt={author}\n        imgStyle={{\n          borderRadius: '50%',\n        }}\n      />\n      <p style={{ margin: 0 }}>\n        Written by <strong>{author}</strong>\n        {shortBio ? ` ${shortBio}` : ''}.{` `}\n        {social.twitter ? (\n          <a href={`https://twitter.com/${social.twitter}`}>\n            You should follow them on Twitter.\n          </a>\n        ) : null}\n      </p>\n    </Wrapper>\n  )\n}\n\nexport default Bio\n","import React, { useState } from 'react'\nimport Styled from '@emotion/styled'\n\nimport { formatPostDate } from '../utils/dates'\nimport theme from '../theme'\n\nconst AvatarWrapper = Styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`\n\nconst AvatarImage = Styled.img`\n  height: 36px;\n  width: 36px;\n  margin-right: 0.875rem;\n  margin-bottom: 0;\n  border-radius: 100%;\n`\n\nconst Time = Styled.time`\n  margin: 0;\n  font-size: 15px;\n  color: ${theme.colors.grey};\n`\n\nconst AuthorNameWrapper = Styled.p`\n  margin: 0;\n  line-height: 0.6px;\n`\n\nconst AuthorName = Styled.a`\n  font-size: 16px;\n  text-decoration: none;\n  line-height: 0;\n  color: ${theme.colors.text};\n`\n\nfunction Avatar({ author, published }) {\n  return (\n    <AvatarWrapper>\n      <AvatarImage src={author.photo} alt={author.name} />\n      <div>\n        <AuthorNameWrapper>\n          <AuthorName\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n            href={author.url}\n          >\n            {author.name}\n          </AuthorName>\n        </AuthorNameWrapper>\n        <Time dateTime={published}>{formatPostDate(published)}</Time>\n      </div>\n    </AvatarWrapper>\n  )\n}\n\nconst ShowReponses = Styled.button`\n  cursor: pointer;\n  width: 100%;\n  color: ${theme.colors.text};\n  border: 1px solid ${theme.colors.primary};\n  border-radius: 3px;\n  padding: 20px;\n  text-align: center;\n  font-size: 14px;\n`\n\nconst Wrapper = Styled.ul`\n  list-style: none;\n  padding: 0;\n\n  & li {\n    box-shadow: ${theme.shadows.box};\n    border: 1px solid ${theme.colors.separator};\n    padding: 15px 20px;\n  }\n\n  & li + li {\n    margin-top: 1.5rem;\n  }\n`\n\nconst VideoContent = Styled.div`\n  text-align: center;\n\n  & video {\n    max-width: 100%;\n  }\n`\n\nconst ResponseLink = Styled.a`\n  text-decoration: none;\n`\n\nfunction Responses({ responses }) {\n  const [showingResponses, setShowingResponses] = useState(false)\n\n  if (!responses.length) {\n    return null\n  }\n\n  if (!showingResponses) {\n    return (\n      <ShowReponses type=\"button\" onClick={() => setShowingResponses(true)}>\n        See {responses.length} response{responses.length > 1 ? 's' : ''}\n      </ShowReponses>\n    )\n  }\n\n  return (\n    <Wrapper>\n      {responses.map(response => (\n        <li>\n          <ResponseLink\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n            href={response.url}\n          >\n            <Avatar author={response.author} published={response.wmReceived} />\n            <div>{response.content && response.content.text}</div>\n            <VideoContent>\n              {response.video && response.video.length\n                ? response.video.map(v => (\n                    <video controls muted autoPlay loop>\n                      <source src={v} type=\"video/mp4\" />\n                      <p>\n                        Your browser doesn't support HTML5 video. Here is a{' '}\n                        <a href={v}>link to the video</a> instead.\n                      </p>\n                    </video>\n                  ))\n                : null}\n            </VideoContent>\n          </ResponseLink>\n        </li>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default Responses\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport Styled from '@emotion/styled'\n\nimport SEO from '../components/seo'\nimport Section from '../components/section'\nimport Pills from '../components/pills'\nimport Bio from '../components/bio'\nimport Embed from '../components/embed'\nimport Responses from '../components/responses'\nimport Layout from '../components/layout'\nimport { formatPostDate, formatReadingTime } from '../utils/dates'\nimport theme from '../theme'\nimport withDefaults from '../../utils/default-options'\n\nconst BackLink = Styled(Link)`\n  text-decoration: none;\n  font-size: 48px;\n  color: ${theme.colors.primary};\n  margin-left: -40px;\n`\n\nconst Header = Styled.header`\n  margin-top: 5em;\n  margin-bottom: 2em;\n\n  & p {\n    font-size: 0.75em;\n  }\n`\n\nconst Footer = Styled.footer`\n  margin-top: 4em;\n  text-align: left;\n\n  & small {\n    font-size: 0.8em;\n    opacity: 0.7;\n  }\n\n  & small a {\n    font-size: 17px;\n  }\n`\n\nconst Separator = Styled.hr`\n  margin: 24px 0;\n  border: 0;\n  background: ${theme.colors.separator};\n  height: 1px;\n`\n\nconst Likes = Styled.a`\n  float: right;\n  text-decoration: none;\n  margin-top: 0;\n`\n\nexport default function PageTemplate({\n  data: { mdx, site, allWebMentionEntry },\n  pageContext,\n}) {\n  const { previous, next, permalink, themeOptions } = pageContext\n\n  const options = withDefaults(themeOptions)\n\n  const webmentions = (allWebMentionEntry || {}).nodes || []\n\n  const likes = webmentions.filter(x => x.wmProperty === 'like-of')\n  const responses = webmentions.filter(x => x.wmProperty === 'in-reply-to')\n\n  return (\n    <Layout>\n      <SEO\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.description || mdx.excerpt}\n        canonicalLink={mdx.frontmatter.canonical_link}\n        keywords={mdx.frontmatter.categories || []}\n        meta={[\n          {\n            name: 'twitter:label1',\n            content: 'Reading time',\n          },\n          {\n            name: 'twitter:data1',\n            content: `${mdx.timeToRead} min read`,\n          },\n        ]}\n      />\n      <Section centered>\n        <article>\n          <Header>\n            <h1>\n              <BackLink to=\"/\">«</BackLink> {mdx.frontmatter.title}\n            </h1>\n            <p>\n              {formatPostDate(mdx.frontmatter.date)}\n              {` • ${formatReadingTime(mdx.timeToRead)}`}\n            </p>\n            <Pills items={mdx.frontmatter.categories} />\n          </Header>\n\n          <MDXRenderer scope={{ Embed }}>{mdx.body}</MDXRenderer>\n        </article>\n        <Footer>\n          <Likes\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n            href={`https://twitter.com/search?q=${permalink}`}\n          >\n            ♡{' '}\n            {likes.length\n              ? `${likes.length} like${likes.length > 1 ? 's' : ''}`\n              : 'Like'}\n          </Likes>\n          <small>\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={`https://twitter.com/search?q=${permalink}`}\n            >\n              Discuss on Twitter\n            </a>{' '}\n            &middot;{' '}\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={`${site.siteMetadata.githubUrl}/edit/master/${\n                options.contentPath\n              }${\n                options.pathPrefix\n                  ? mdx.fields.slug.replace(options.pathPrefix, '')\n                  : mdx.fields.slug\n              }index.md`}\n            >\n              Edit this post on GitHub\n            </a>\n          </small>\n          <Separator />\n          <Bio />\n          <Separator />\n          {responses.length ? (\n            <div>\n              <Responses responses={responses} />\n              <Separator />\n            </div>\n          ) : null}\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </Footer>\n      </Section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String, $permalink: String) {\n    site {\n      siteMetadata {\n        siteUrl\n        githubUrl\n      }\n    }\n    mdx(id: { eq: $id }) {\n      fields {\n        slug\n      }\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        description\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        canonical_link\n      }\n      body\n    }\n    allWebMentionEntry(filter: { wmTarget: { eq: $permalink } }) {\n      nodes {\n        wmProperty\n        wmId\n        url\n        wmReceived\n        author {\n          url\n          photo\n          name\n        }\n        content {\n          text\n        }\n        video\n      }\n    }\n  }\n`\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","module.exports = themeOptions => {\n  const pathPrefix = themeOptions.pathPrefix || ``\n  const contentPath = themeOptions.contentPath || `content`\n  const imagesPath = themeOptions.imagesPath || `src/images`\n\n  const config = themeOptions.config || {}\n\n  return {\n    ...themeOptions,\n    pathPrefix,\n    contentPath,\n    imagesPath,\n    config,\n  }\n}\n"],"sourceRoot":""}