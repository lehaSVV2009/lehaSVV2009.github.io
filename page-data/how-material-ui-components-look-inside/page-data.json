{"componentChunkName":"component---node-modules-gatsby-theme-medium-to-own-blog-src-templates-blog-post-js","path":"/how-material-ui-components-look-inside/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://lehasvv2009.github.io","githubUrl":"https://github.com/lehaSVV2009/medium-blog"}},"mdx":{"fields":{"slug":"/how-material-ui-components-look-inside/"},"excerpt":"In the article I would like to show how most important parts of basic components of  Material UI  look in WYSIWIG Chrome Devtools (HTML and…","timeToRead":1,"frontmatter":{"title":"How Material UI components look inside","description":"In the article I would like to show how most important parts of basic components  of Material UI look in WYSIWIG Chrome Devtools (HTML and…","categories":[],"date":"May 12, 2020","canonical_link":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How Material UI components look inside\",\n  \"description\": \"In the article I would like to show how most important parts of basic components  of Material UI look in WYSIWIG Chrome Devtools (HTML and…\",\n  \"date\": \"2020-05-12T09:01:43.313Z\",\n  \"categories\": [],\n  \"published\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In the article I would like to show how most important parts of basic components of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://material-ui.com/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Material UI\"), \" look in WYSIWIG Chrome Devtools (HTML and CSS).\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://material-ui.com/demos/app-bar/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"AppBar\"))), mdx(\"p\", null, \"TODO insert image here\"), mdx(\"p\", null, \"TODO short description\"), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<AppBar position=\\\"fixed\\\">\\n  <Toolbar>\\n    <Typography variant=\\\"h6\\\">\\n      Text\\n    </Typography>\\n    <div className={classes.grow} />\\n    <Button>Button</Button>\\n  </Toolbar>\\n</AppBar>\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<header class=\\\"app-bar\\\">\\n  <div class=\\\"inner-box\\\">\\n    <h6 class=\\\"title\\\">Text</h6>\\n    <div class=\\\"empty-space\\\"></div>\\n    <button>Button</button>\\n  </div>\\n</header>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".app-bar {\\n  /* Minimum required for app bar */\\n  position: fixed;\\n  width: 100%;\\n  top: 0;\\n  right: 0;\\n\\n  /* App bar colors and shadows */\\n  color: #fff;\\n  background-color: #2196f3;\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.inner-box {\\n  /* App bar inner single div (parent for title and buttons) */\\n  display: flex;\\n  align-items: center;\\n\\n  /* App bar inner single div sizes  */\\n  min-height: 56px;\\n  padding-left: 16px;\\n  padding-right: 16px;\\n}\\n\\n@media (min-width: 600px) {\\n  /* App bar inner single div sizes overrides */\\n  .inner-box {\\n    min-height: 64px;\\n    padding-left: 24px;\\n    padding-right: 24px;\\n  }\\n}\\n\\n.title {\\n  /* Font customizations */\\n  margin: 0;\\n  font-size: 1.25rem;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\n  font-weight: 500;\\n\\n  /* Large text ellipsis */\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n\\n.empty-space {\\n  /* Growing and shrinking divider between text and button */\\n  flex: 1 1 auto;\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesandbox.io/s/r5zzl19rrq\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"https://codesandbox.io/s/r5zzl19rrq\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Avatar\")), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Avatar alt=\\\"Alex Soroka\\\" src=\\\"https://lehasvv2009.github.io/resume/avatar.jpeg\\\" />\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"avatar\\\">\\n  <img class=\\\"image\\\" alt=\\\"Alex Soroka\\\" src=\\\"https://lehasvv2009.github.io/resume/avatar.jpeg\\\" />\\n</div>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".avatar {\\n  width: 60px;\\n  height: 60px;\\n  overflow: hidden;\\n  border-radius: 50%;\\n}\\n\\n.image {\\n  height: 100%;\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button\")), mdx(\"p\", null, \"TODO insert image\"), mdx(\"p\", null, \"TODO insert description\"), mdx(\"p\", null, \"Ripple is implemented as a combination of JS (detect cursor point) and CSS animation.\"), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Button variant=\\\"contained\\\" color=\\\"primary\\\">\\n  Primary\\n</Button>\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<button class=\\\"button\\\">\\n  <span>Primary</span>\\n  <span class=\\\"ripple-effect-text-wrapper\\\"></span>\\n</button>\\n\")), mdx(\"p\", null, \"JavaScript:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\n\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\n\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dialog\")), mdx(\"p\", null, \"TODO insert image\"), mdx(\"p\", null, \"TODO insert description\"), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Dialog open>\\n  <h1>Title</h1>\\n  <div>Content</div>\\n</Dialog> \\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"dialog\\\">\\n  <div class=\\\"overlay\\\"></div>\\n  <div class=\\\"centerer\\\">\\n    <div class=\\\"paper\\\">\\n      <h1>Title</h1>\\n      <div>Content</div>\\n    </div>\\n  </div>\\n</div>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".dialog {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1300;\\n}\\n\\n.overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: -1;\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.centerer {\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 30px;\\n}\\n\\n.paper {\\n  background-color: white;\\n  border-radius: 4px;\\n  padding: 16px;\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Drawer\")), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Drawer open={true}>\\n  My drawer         \\n</Drawer>\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"drawer\\\">\\n  <div class=\\\"overlay\\\"></div>\\n  <div class=\\\"layout\\\">\\n    <div class=\\\"content\\\">\\n      My drawer\\n    </div>\\n  </div>\\n</div>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".drawer {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1300;\\n}\\n\\n.overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: -1;\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.layout {\\n  width: 150px;\\n  height: 100%;\\n  left: 0;\\n  right: auto;\\n}\\n\\n.content {\\n  background-color: white;\\n  height: 100%;\\n  overflow-y: auto;\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Grid\")), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Grid container>\\n  <Grid item xs={12} sm={6}>Half</Grid>\\n  <Grid item xs={6} sm={3}></Grid>\\n  <Grid item xs={6} sm={3}></Grid>\\n</Grid>\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"container\\\">\\n  <div class=\\\"item xs-12 sm-6\\\">\\n    Half or Full\\n  </div>\\n  <div class=\\\"item xs-6 sm-3\\\">\\n    Quarter1 or Half1\\n  </div>\\n  <div class=\\\"item xs-6 sm-3\\\">\\n    Quarter2 or Halh2\\n  </div>\\n</div>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"* {\\n  box-sizing: border-box;\\n}\\n\\n.container {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\n.item {\\n  padding: 12px;\\n}\\n\\n.xs-12 {\\n  flex-basis: 100%;\\n}\\n\\n.xs-6 {\\n  flex-basis: 50%;\\n}\\n\\n@media screen and (min-width: 600px) {\\n  .sm-6 {\\n    flex-basis: 50%;\\n  }\\n\\n  .sm-3 {\\n    flex-basis: 25%;\\n  }\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Icon\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"List\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Menu\")), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\n\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Paper\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Progress\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Switch\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Snackbar\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Table\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tabs\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Textfield\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tooltip\")), mdx(\"p\", null, \"React:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Tooltip title=\\\"Add\\\">\\n  <div>Bla</div>\\n</Tooltip>\\n\")), mdx(\"p\", null, \"HTML:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"tooltip\\\">\\n  <div class=\\\"tooltip-label\\\">\\n    Add\\n  </div>\\n</div>\\n\")), mdx(\"p\", null, \"CSS:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \".tooltip {\\n  position: absolute;\\n  /* Line that must be calculated by JS */\\n  transform: translate3d(145px, 93px, 0px);\\n  top: 0px;\\n  z-index: 1500;\\n  opacity: 0.9;\\n}\\n\\n.tooltip-label {\\n  opacity: 1;\\n  transform: scale(1, 1) translateZ(0px);\\n  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 133ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\\n  margin: 14px 0;\\n  color: #fff;\\n  padding: 4px 8px;\\n  font-size: 0.625rem;\\n  font-family: \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\\n  line-height: 1.4em;\\n  border-radius: 4px;\\n  background-color: #616161;\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Typography\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"allWebMentionEntry":{"nodes":[]}},"pageContext":{"id":"b7920b0a-f458-5e7f-87ed-71d504163c9b","previous":null,"next":null,"permalink":"https://lehasvv2009.github.io/how-material-ui-components-look-inside/","themeOptions":{"plugins":[],"config":{"title":"Aliaksei Saroka","description":"Aliaksei Saroka's blog","shortBio":"Written by Aliaksei Saroka","bio":"https://lehasvv2009.github.io/resume.","author":"Aliaksei Saroka","githubUrl":"https://github.com/lehaSVV2009/medium-blog","siteUrl":"https://lehasvv2009.github.io/","social":{"twitter":"","medium":"@lehasvv2009","facebook":"","github":"lehasvv2009","linkedin":"aliaksei-saroka","instagram":"specialforkadet"},"goatCounterCode":null,"gaCode":"UA-166246265-1"}}}}}